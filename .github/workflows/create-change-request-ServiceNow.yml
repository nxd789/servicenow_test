name: Create DevOps Change Request in ServiceNow

# Controls when the workflow will run
on:
  pull_request:
    types: [opened] # synchronize, reopened
    branches:
      - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  initialize:
    name: Initialize Values
    runs-on: ubuntu-latest
    outputs:
      ticket_num: ${{ steps.get_ticket_num.outputs.ticket_num }}
      branch_name: ${{ steps.get_ticket_num.outputs.branch_name }}
      message: ${{ steps.prepare_work_notes_msg.outputs.message }}
    steps:
      - name: Get Ticket Number From Branch Name
        id: get_ticket_num
        run: |
          branch_name=${{ github.head_ref }}

          shopt -s nocasematch  # Enable case-insensitive matching
          if [[ "$branch_name" =~ (HR[C]?|INC|RITM|SCTASK)[0-9]+ ]]; then
            ticket_num="${BASH_REMATCH[0]}"
          else
            ticket_num="N/A"
          fi
          echo "ticket_num=$ticket_num" >> $GITHUB_OUTPUT
          echo "branch_name=$branch_name" >> $GITHUB_OUTPUT

      - name: Get PR Details
        id: get_pr_details
        run: |
          pr_number=${{ github.event.number }}
          echo "PR_NUMBER=$pr_number" >> $GITHUB_ENV
          echo "PR_LINK=${{ github.server_url }}/${{ github.repository }}/pull/$pr_number" >> $GITHUB_ENV

      - name: Prepare Work Notes Message
        id: prepare_work_notes_msg
        run: |
          labels=(
            "Repository"
            "Branch name"
            "Triggered by"
            "Ticket number"
          )
          values=(
            "${{ github.event.repository.name }}"
            "${{ steps.get_ticket_num.outputs.branch_name }}"
            "${{ github.actor }}"
            "${{ steps.get_ticket_num.outputs.ticket_num }}"
          )

          # Format message
          content="[code]"

          href_value=\\\"$PR_LINK\\\"
          target_value=\\\"_blank\\\"
          content+="<b>Pull request <a href=href_value target=target_value>#$PR_NUMBER</a> was opened.</b><br>"
          content+="<pre>"    # Read extra spaces as-is

          for idx in "${!labels[@]}"; do
            label="${labels[$idx]}"
            value="${values[$idx]}"
            content+=$(printf "%-15s- %s<br>" "$label" "$value")
          done

          content+="</pre>[/code]"

          echo "message<<EOF" >> $GITHUB_OUTPUT
          echo "$content" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
  change:
    name: Create a ServiceNow Change Request Payload
    needs: initialize
    # The type of runner that the job will run on
    runs-on: ubuntu-latest # sw-ubuntu-latest
    outputs: 
      chg_number: ${{ steps.create.outputs.change-request-number }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps: 
      # TODO: Get some details of the ticket (e.g., requester on the HRC case) and copy them to the CHG record

      - name: Create Change Request in ServiceNow
        id: create
        # For custom action based change, remove or disable the 'deployment-gate' configuration and the 'deploy' step. Ensure to update to the latest version of the custom action, for e.g. ServiceNow/servicenow-devops-change@v5.1.0
        uses: ServiceNow/servicenow-devops-change@v6.1.0
        with:
          # Devops Integration Token
          devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
          # ServiceNow Instance URL
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          # Orchestration Tool Id
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          # GitHub Context
          context-github: ${{ toJSON(github) }}
          # Display Name of the Job
          job-name: Create a ServiceNow Change Request Payload # Must match the job name containing these steps
          # Unsupported fields are: risk, impact, and risk_impact_analysis
          change-request: '{
            "attributes":{
              "short_description": "${{ needs.initialize.outputs.branch_name }}",
              "description": "Automatically created by GitHub Action in response to a new branch being created. TODO: Associate branch to service or something",
              "work_notes": "${{ needs.initialize.outputs.message }}"
              }
            }'
          # You can specify the requested_by attribute either with name or sys_id. Example: "requested_by":{"name": "Test User"} or "requested_by": "62826bf03710200044e0bfc8bcbe5df1"
          # You can specify the assignment_group attribute either with name or sys_id. Example: "assignment_group":{"name": "Change Approval Team"} or "assignment_group": "5f721d93c0a8010e015533746de18bf9"
          # start_date: This is the planned start date
          # end_date: This is the planned end date
          # For deployment gate based change, uncomment the 'deployment-gate' configuration and the 'deploy' step 
          deployment-gate: '{"environment": "deployment_gate_sn_test", "jobName": "Deploy"}'

      # - name: testing_temporary
      #   run: echo "Hello, ${{ steps.create.outputs.change-request-number }}"

  # approve:
  #   name: Approve
  #   needs: change
  #   runs-on: ubuntu-latest
  #   environment: deployment_gate_sn_test
  #   steps:
  #     - name: Test Approve
  #       run: echo "Approved |${{ needs.change.outputs.chg_number }}|..."

  deploy:
    name: Deploy
    needs: change
    runs-on: ubuntu-latest
    environment: deployment_gate_sn_test
    steps:
      - name: Finish last steps
        run: echo "Done. |${{ needs.change.outputs.chg_number }}|" # TODO: print the change request number
